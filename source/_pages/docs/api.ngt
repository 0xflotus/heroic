<h2>API</h2>

<h3>Endpoints</h3>

<api-endpoint path="/status" method="GET">
  <p>
    Query for the status of a heroic instance.
  </p>

  <p>
    The status code <span class="status">503</span> is used to indicate to load balancers that a service is
    not available for requests right now.
  </p>

  <api-accept empty="true"></api-accept>

  <api-response status="200">
    <h4>Example <span class="status">200</span> Response</h4>

    <codeblock language="json">
    {
      "ok": true,
      "consumers": {
        "ok": true,
        "available": 0,
        "ready": 0,
        "errors": 0,
        "consumingThreads": 1,
        "totalThreads": 1
      },
      "backends": {
        "ok": true,
        "available": 0,
        "ready": 0
      },
      "metadataBackends": {
        "ok": true,
        "available": 0,
        "ready": 0
      },
      "cluster": {
        "ok": true,
        "onlineNodes": 1,
        "offlineNodes": 0
      }
    }
    </codeblock>
  </api-response>

  <api-response status="503">
    <h4>Example <span class="status">503</span> Response</h4>

    <p>
      A <span class="status">503</span> will still return a response body, however the root key <code>.ok</code> will have the value <code>false</code>.
    </p>

    <p>
      The below document shows that there is something wrong with the configured consumers, in this case it is because the number of <code>consumingThreads</code> is not the same as the <code>totalThreads</code>
    </p>

    <codeblock language="json">
    {
      "ok": false,
      "consumers": {
        "ok": false,
        "available": 0,
        "ready": 0,
        "errors": 0,
        "consumingThreads": 0,
        "totalThreads": 1
      },
      ...
    }
    </codeblock>
  </api-response>
</api-endpoint>

<api-endpoint path="/query/metrics" method="POST">
  <p>
    Query and aggregate metrics.
  </p>

  <api-accept curl-data='{"range": {"type": "relative"}, "filter": ["and", ["key", "foo"], ["=", "foo", "bar"], ["+", "role"]], "groupBy": ["site"], "aggregators": []}'>
    <api-type>
      <api-field required="true" name="range" type-href="QueryDateRange">
        The range in time for which to query
      </api-field>

      <api-field name="filter">
        <p>
          A statement used to filter down the selected time series.
          Each individual filtering field (<code>filter</code>, <code>key</code>, <code>tags</code>, and <code>hasTags</code>) may be empty.
          At least one must be specified to make up a valid filter.
        </p>

        <p>
          See <a ui-sref="docs.filter_dsl">Filter DSL</a> for details on how to build a filter.
        </p>
      </api-field>

      <api-field name="aggregators">
        Aggregators used to downsample the response.
      </api-field>

      <api-field name="groupBy">
        <p>
          Will create several result groups from the given keys.
          Series will be aggregated on a per-group basis.
        </p>

        <h5>Example 1.</h5>

        Given time series <code language="json">{"a": 1, "b": 2}</code> and <code language="json">{"b": 3, "c": 4}</code>, and a <code>groupBy</code> of <code language="json">["a", "b"]</code>
        the returned result groups would be <code language="json">[{"a": 1, "b": 2}, {"a": null, "b": 3}]</code>.
      </api-field>
    </api-type>

    <h4>Example Request</h4>

    <codeblock language="json">
    {
      "range": {"type": "relative"},
      "filter": ["and", ["key", "foo"], ["=", "foo", "bar"], ["+", "role"]],
      "groupBy": ["site"],
      "aggregators": []
    }
    </codeblock>
  </api-accept>

  <api-response status="200">
    <h4>Example <span class="status">200</span> Response</h4>
    <pre><code language="json">{}</code></pre>
  </api-response>
</api-endpoint>

<h3>Types</h3>

<api-type name="QueryDateRange">
  <p>
    Class:
    <a git-href-java="heroic-core">com.spotify.heroic.http.query.QueryDateRange</a>
  </p>

  <api-field required="true" name="type" type-json='"absolute"'>
    Type of the absolute date range.
  </api-field>

  <api-field required="true" name="start" type-json='<number>'>
    Starting timestamp in milliseconds from the unix epoch.
  </api-field>

  <api-field required="true" name="end" type-json='<number>'>
    Ending timestamp in milliseconds from the unix epoch.
  </api-field>

  <api-field required="true" name="type" type-json='"relative"'>
    Type of the relative date range.
  </api-field>

  <api-field name="unit" type-json='"MILLISECONDS" | "SECONDS" | "MINUTES" | "HOURS" | "DAYS" | "WEEKS" | "MONTHS"'>
    Unit to use for <code>value</code>
  </api-field>

  <api-field name="value" type-json='<number>'>
    How many <code>unit</code> timespans back in time this date starts.
  </api-field>
</api-type>
